---
- name: Setup grafana
  hosts: grafana

  pre_tasks:
  - name: "setup os"
    block:
    - name: "grafana : setup os : ensure grafana group exists"
      group:
        name: grafana
        state: present
    - name: "grafana : setup os : create cert dir"
      file:
        path: /etc/ssl/grafana/
        state: directory
        owner: "{{ ansible_user }}"
        group: grafana
    become: yes

  tasks:
  - name: "tls"
    block:
    - name: "grafana : tls : generate private key"
      community.crypto.openssl_privatekey:
        path: "/etc/ssl/grafana/{{ ansible_host }}"
        group: grafana
        mode: 0644
    - name: "grafana : tls : generate csr"
      community.crypto.openssl_csr:
        path: "/etc/ssl/grafana/{{ ansible_host }}.csr"
        privatekey_path: "/etc/ssl/grafana/{{ ansible_host }}"
        common_name: "{{ ansible_host }}"
        subject_alt_name: "IP:{{ ansible_host }}"
    - name: "grafana : tls : generate certificate" 
      community.crypto.x509_certificate:
        path: "/etc/ssl/grafana/{{ ansible_host }}.crt"
        csr_path: "/etc/ssl/grafana/{{ ansible_host }}.csr"
        ownca_content: "{{ ownca_content }}"
        ownca_privatekey_content: "{{ ownca_privatekey_content }}"
        provider: ownca
        group: grafana
        mode: 0644
    become: yes

- name: Start grafana
  hosts: grafana
  pre_tasks:
  - name: "grafana : iptables"
    block: 
    - name: "grafana : iptables : allow grafana on 3000/TCP"
      iptables:
        chain: INPUT
        destination_port: "3000"
        jump: ACCEPT
        protocol: tcp
    - name: "grafana : iptables : persist"
      shell: iptables-save > /etc/iptables/rules.v4
    become: true
  - name: "grafana : dashboards"
    block: 
    - name: "grafana : dashboards : config"
      copy:
        src: grafana_dashboards.yml
        dest: /etc/grafana/provisioning/dashboards/
        owner: "{{ ansible_user }}"
        group: grafana
    - name: "grafana : dashboards : copy definitions"
      copy:
        src: dashboards/
        dest: /etc/dashboards/
        owner: "{{ ansible_user }}"
        group: grafana
    become: yes

  roles:
  - cloudalchemy.grafana
  vars:
    grafana_server:
      protocol: https
      cert_file: "/etc/ssl/grafana/{{ ansible_host }}.crt"
      cert_key: "/etc/ssl/grafana/{{ ansible_host }}"
